# Generated by Django 5.0.2 on 2024-02-14 02:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(max_length=30)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Complexity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, 'Початкова'), (2, 'Середня'), (3, 'Висока')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('gender', models.IntegerField(choices=[(1, 'чоловік'), (2, 'жінка')], default=1)),
                ('birth_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('category', models.IntegerField(choices=[(1, 'Гори'), (2, 'Водна'), (3, 'Рівнина')], default=3)),
            ],
        ),
        migrations.CreateModel(
            name='Spec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, 'піший'), (2, 'кінний'), (3, 'водний'), (4, 'гірський')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Specs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, 'водники'), (2, 'спелеологи'), (3, 'альпіністи'), (4, 'пішоходи')], default=41)),
            ],
        ),
        migrations.CreateModel(
            name='Administration',
            fields=[
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='travel_club.section')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.section')),
            ],
        ),
        migrations.CreateModel(
            name='Tourist',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.person')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.complexity')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.group')),
            ],
            bases=('travel_club.person',),
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField()),
                ('from_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes_from', to='travel_club.place')),
                ('places', models.ManyToManyField(related_name='routes_point', to='travel_club.place')),
                ('to_place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes_to', to='travel_club.place')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.specs'),
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='travel_club.person')),
                ('administration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='travel_club.administration')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
            bases=('travel_club.person',),
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.event')),
                ('sections', models.ManyToManyField(to='travel_club.section')),
            ],
            bases=('travel_club.event',),
        ),
        migrations.CreateModel(
            name='Amateur',
            fields=[
                ('tourist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.tourist')),
            ],
            bases=('travel_club.tourist',),
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('tourist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.tourist')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=20)),
                ('administration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.administration')),
                ('spec', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.specs')),
            ],
            bases=('travel_club.tourist',),
        ),
        migrations.CreateModel(
            name='Sportsman',
            fields=[
                ('tourist_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.tourist')),
            ],
            bases=('travel_club.tourist',),
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.event')),
                ('duration', models.IntegerField()),
                ('complexity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='travel_club.complexity')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.person')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.route')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel_club.spec')),
                ('tourists', models.ManyToManyField(related_name='tours', to='travel_club.tourist')),
            ],
            bases=('travel_club.event',),
        ),
        migrations.AddField(
            model_name='group',
            name='coach',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='travel_club.coach'),
        ),
        migrations.AddField(
            model_name='event',
            name='coaches',
            field=models.ManyToManyField(to='travel_club.coach'),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel_club.coach')),
                ('sportsman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel_club.sportsman')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='travel_club.event')),
                ('athletes', models.ManyToManyField(to='travel_club.sportsman')),
            ],
            bases=('travel_club.event',),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(check=models.Q(('date_to__gte', models.F('date_from'))), name='date_gte'),
        ),
        migrations.AddConstraint(
            model_name='instructor',
            constraint=models.CheckConstraint(check=models.Q(('coach', None), ('sportsman', None), _connector='OR'), name='not_both_null'),
        ),
    ]
